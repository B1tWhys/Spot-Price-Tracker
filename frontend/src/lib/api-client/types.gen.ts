// This file is auto-generated by @hey-api/openapi-ts

export type CurrentPricesOrderBy = 'price_usd_hourly' | 'femto_usd_per_v_core_cycle' | 'femto_usd_per_p_core_cycle';

export type CurrentPricesQuery = {
    instance_types?: (Array<(string)> | null);
    operating_systems?: (Array<(string)> | null);
    regions?: (Array<(string)> | null);
    order_by?: (CurrentPricesOrderBy | null);
    ascending?: (boolean | null);
};

export type FilterOptions = {
    instance_types: Array<(string)>;
    operating_systems: Array<(string)>;
    regions: Array<(string)>;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type SpotInstancePriceResponse = {
    /**
     * The type of the instance (e.g., `m5.xlarge`).
     */
    instance_type: string;
    /**
     * Amazon's Product Description
     */
    product_description: (string | null);
    /**
     * The current hourly price in USD.
     */
    price_usd_hourly: number;
    /**
     * The AWS region where the instance is available.
     */
    region: string;
    /**
     * The specific availability zone within the region.
     */
    availability_zone: string;
    /**
     * The ISO 8601 timestamp when the price was recorded.
     */
    timestamp: string;
    /**
     * The number of virtual CPU p_cores for the instance type.
     */
    v_cores: number;
    /**
     * The number of physical CPU p_cores for the instance type.
     */
    cores: number;
    /**
     * The sustained clock speed of the instance type in GHz.
     */
    sustained_clock_speed_ghz: (number | null);
    /**
     * Cost per clock cycle, per V core in units of USD * 10^15
     */
    femto_usd_per_v_core_cycle: (number | null);
    /**
     * Cost per clock cycle, per physical core in units of USD * 10^15
     */
    femto_usd_per_p_core_cycle: (number | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type GetCurrentPricesCurrentGetData = {
    query?: {
        /**
         * Filter by instance types, e.g., m5.large,m5.xlarge
         */
        it?: (Array<(string)> | null);
        /**
         * Filter by operating system, e.g., LINUX/UNIX, SUSE Linux, etc
         */
        os?: (Array<(string)> | null);
        /**
         * Filter by regions, e.g., us-east-1,us-west-2
         */
        r?: (Array<(string)> | null);
    };
};

export type GetCurrentPricesCurrentGetResponse = (Array<SpotInstancePriceResponse>);

export type GetCurrentPricesCurrentGetError = (HTTPValidationError);

export type GetCurrentPricesPostCurrentPostData = {
    body?: (CurrentPricesQuery | null);
};

export type GetCurrentPricesPostCurrentPostResponse = (Array<SpotInstancePriceResponse>);

export type GetCurrentPricesPostCurrentPostError = (HTTPValidationError);

export type GetFilterOptionsFilterOptionsGetResponse = (FilterOptions);

export type GetFilterOptionsFilterOptionsGetError = unknown;